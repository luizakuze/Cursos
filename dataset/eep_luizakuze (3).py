# -*- coding: utf-8 -*-
"""eep-luizakuze.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m3X2Wz5Cy2SI1OI_582Tm_nB3Ez-BygZ

# Estudo do tempo de corrida em minutos por km (pace) üìö <br> An√°lise a partir da Maratona de Boston 2023 üèÉ
> Autora: Luiza Kuze <br> Data: 02/12/2023
"""

#@title Importando bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pylab as plt
import matplotlib.patches as patches
import seaborn as sns
plt.style.use('ggplot')

#@title Leitura do arquivo

uri = "./boston_marathon_2023.csv"
maratona = pd.read_csv(uri)

"""## An√°lise da Estrutura do Dataset üìñ"""

#@title Verificando duplica√ß√µes

maratona.duplicated().any()

#@title Renomeando colunas

maratona.columns = ["divisao_faixa", "posicao_geral", "posicao_genero", "posicao_faixa", "nome", "equipe", "numero_peito", "tempo_meia_maratona", "tempo_liquido_maratona", "tempo_bruto_maratona", "genero", "tempo_meia_maratona_segundos", "tempo_liquido_maratona_segundos", "tempo_bruto_maratona_segundos", "tempo_liquido_maratona_minutos"]
maratona.head()

#@title Adicionando o 'Pace' √† tabela

maratona['pace'] = maratona['tempo_liquido_maratona_minutos'] / 42
maratona.head()

#@title Visualiza√ß√£o geral

maratona.info()

"""## An√°lise do Pace e G√™nero üë©‚Äçü¶±üë®‚Äçü¶∞

> ### Motiva√ß√£o
- Como o pace difere entre homens e mulheres?
- Como o pace m√©dio varia em diferentes faixas et√°rias para homens e mulheres?
- Qual √© a distribui√ß√£o percentual de homens e mulheres na maratona?
- Quantos indiv√≠duos mais r√°pidos do g√™nero oposto?
"""

#@title Dividindo a popula√ß√£o em 2 amostras

homens = maratona[maratona['genero'] == 'M'].reset_index()
mulheres = maratona[maratona['genero'] == 'W'].reset_index()

#@title 1¬™ Amostra - Homens
homens.head(3)

#@title 2¬™ Amostra - Mulheres
mulheres.head(3)

#@title Frequ√™ncia de G√™neros
df = maratona['genero'].value_counts()

# configura gr√°fico
df.plot(kind='pie', autopct='%1.1f%%', labels=['Masculino','Feminino'],  startangle=90, figsize=(5, 5), colors=['skyblue', 'lightcoral'], wedgeprops=dict(width=0.3))

# r√≥tulos do gr√°fico
plt.title("Frequ√™ncia de G√™neros")
plt.ylabel("")

# mostrar gr√°fico
plt.show()

#@title M√©dia do pace geral e por g√™nero

mp_todos = maratona['pace'].mean()
mp_homens = homens['pace'].mean()
mp_mulheres = mulheres['pace'].mean()

print(f'M√©dia Pace:\nPara todos: {mp_todos}\nPara homens: {mp_homens}\nPara mulheres: {mp_mulheres}')

#@title Densidade da m√©dia do pace geral e por g√™nero

# configura√ß√£o do gr√°fico
plt.figure(figsize=(8, 5))
sns.set(style="whitegrid")

# densidade da m√©dia do pace
sns.kdeplot(maratona['pace'], color='skyblue', fill=True)

# linha vertical para m√©dia geral
plt.axvline(mp_todos, color='red', linestyle='dashed', linewidth=2, label='M√©dia Geral')

# m√©dia do pace para homens
plt.axvline(mp_homens, color='orange', linestyle='dashed', linewidth=2, label='M√©dia Homens')

# m√©dia do pace para mulheres
plt.axvline(mp_mulheres, color='purple', linestyle='dashed', linewidth=2, label='M√©dia Mulheres')

# r√≥tulos do gr√°fico
plt.title('Gr√°fico de Densidade do Pace com Linhas Verticais')
plt.xlabel('Pace')
plt.ylabel('Densidade')
plt.legend()

# mostrar gr√°fico
plt.show()

#@title desvio padr√£o
dp_todos = maratona['pace'].std()
print('Desvio padr√£o', dp_todos)

#title Densidade do pace por g√™nero

# configura√ß√£o do gr√°fico
plt.figure(figsize=(7, 4))
sns.set(style="whitegrid")

# gr√°fico de densidade
## para homens
sns.kdeplot(homens['pace'], shade=True, color='skyblue', label='Homens')
## para mulheres
sns.kdeplot(mulheres['pace'], shade=True, color='lightcoral', label='Mulheres')

# linhas verticais com informa√ß√µes da m√©dia geral
plt.axvline(mp_todos, color='plum', linestyle='dashed', linewidth=2, label='M√©dia Geral')
plt.axvline((mp_todos + dp_todos), color='purple', linestyle='dashed', linewidth=2, label='+ Desvio Padr√£o')
plt.axvline((mp_todos - dp_todos), color='purple', linestyle='dashed', linewidth=2, label='- Desvio Padr√£o')

# r√≥tulos do gr√°fico
plt.title('Distribui√ß√£o de Densidade do Pace por G√™nero')
plt.xlabel('Pace')
plt.ylabel('Densidade')
plt.legend()

# mostra o gr√°fico
plt.show()

#@title Contagem de indiv√≠duos com o pace menor por g√™nero

## tinham 15175 inicialmente, passou para
tm_homens= homens.head(len(mulheres))

# homens com pace menor que mulheres
qt_homens_menor = (tm_homens['pace'] < mulheres['pace']).sum()

# mulheres com pace menor que homens
qt_mulheres_menor = (mulheres['pace'] < tm_homens['pace']).sum()

print(f'N√∫mero total de homens: {len(homens)} e N√∫mero total de mulheres: {len(mulheres)}\n')
print(f'Homens com pace menor que mulheres: {qt_homens_menor} (de um total de {len(tm_homens)} homens)')
print(f'Mulheres com pace menor que homens: {qt_mulheres_menor} (de um total de {len(mulheres)} mulheres)')

#@title M√©dia do pace por faixa et√°ria

# para todos
mpf_todos = maratona.groupby('divisao_faixa')['pace'].mean().reset_index()

# para homens
mpf_homens = homens.groupby('divisao_faixa')['pace'].mean().reset_index()

# para mulheres
mpf_mulheres = mulheres.groupby('divisao_faixa')['pace'].mean().reset_index()

print(f'M√©dia do pace por faixa et√°ria:\nPara todos: {mpf_todos}\nPara homens: {mpf_homens}\nPara mulheres: {mpf_mulheres}')

#@title Pace m√©dio por faixa et√°ria e g√™nero

# figura e eixo
fig, ax = plt.subplots(figsize=(10, 5), facecolor='white', dpi=80)

# Adicionar as barras verticais representando a m√©dia de pace para mulheres e homens
ax.vlines(x=mpf_mulheres.index, ymin=0, ymax=mpf_mulheres['pace'], color='lightcoral', alpha=1, linewidth=20, label='Mulheres')
ax.vlines(x=mpf_homens.index, ymin=0, ymax=mpf_homens['pace'], color='skyblue', alpha=0.7, linewidth=20, label='Homens')

# par√¢metros do eixo horizontal
plt.xticks(mpf_homens.index, mpf_homens['divisao_faixa'], rotation=60, horizontalalignment='right', fontsize=12)

ax.set(ylabel='Pace', ylim=(0, 10))
ax.set(xlabel='Divis√£o Faixa (√≠ndices)')

plt.legend()
plt.title('Pace m√©dio por faixa et√°ria e g√™nero')
plt.show()

"""## An√°lise Pace e Equipes de corrida üë≠

> ## Motiva√ß√£o
- Qual a equipe mais veloz?
- Ter uma equipe te torna mais veloz?
- Qual o percentual de corredores com e sem equipe?
- Como difere o pace entre corredores com e sem equpe?
"""

#@title Dividindo a popula√ß√£o em 2 amostras

sem_equipe = maratona[maratona['equipe'] == 'Team‚Äì'].reset_index()
com_equipe = maratona[maratona['equipe'] != 'Team‚Äì'].reset_index()

#@title 1¬™ Amostra - Corredores com equipe
com_equipe.head(3)

#@title 2¬™ Amostra - Corredores sem equipe
sem_equipe.head(3)

#@title N√∫mero de equipes
num_equipes = com_equipe['equipe'].nunique()
print('N√∫mero de equipes', num_equipes)

#@title Equipes com maior n√∫mero de corredores

com_equipe['equipe'].value_counts().head()

#@title N√∫mero de corredores com e sem equipe

# com equipe
nc_com_equipe = com_equipe['nome'].nunique()

# sem equipe
nc_sem_equipe = sem_equipe['nome'].nunique()

print(f'N√∫mero de corredores\nCom equipe: {nc_com_equipe}\nSem equipe: {nc_sem_equipe}')

#@title Frequ√™ncia de corredores com e sem equipe

# novo dataframe para contagem de corredores com e sem equipe
df_frequencia = pd.DataFrame({'Frequ√™ncia': [nc_sem_equipe, nc_com_equipe]},
                             index=['Sem Equipe', 'Com Equipe'])

# configura√ß√£o gr√°fico de pizza
df_frequencia['Frequ√™ncia'].plot(kind='pie', autopct='%1.1f%%', startangle=90, figsize=(5, 5),
                                labels=df_frequencia.index, colors=['plum', 'aquamarine'], wedgeprops=dict(width=0.3))

# r√≥tulos do gr√°fico
plt.title("Frequ√™ncia de Corredores Com e Sem Equipe")
plt.ylabel("")

# mostrar gr√°fico
plt.show()

#@title Pace m√©dio corredores com e sem equipe
mp_com_equipe = com_equipe['pace'].mean()
mp_sem_equipe = sem_equipe['pace'].mean()

print(f'Pace m√©dio\nCom equipe: {mp_com_equipe}\nSem equipe: {mp_sem_equipe}')

#@title Densidade de paces com e sem equipe

# configura o gr√°fico
plt.figure(figsize=(8, 5))

# normalizar os histogramas
sns.histplot(com_equipe['pace'], color='plum', alpha=0.75, label='Com Equipe', kde=True, stat='density')
sns.histplot(sem_equipe['pace'], color='aquamarine', alpha=0.75, label='Sem Equipe', kde=True, stat='density')

# r√≥tulos do gr√°fico
plt.xlabel('Pace')
plt.ylabel('Densidade')
plt.title("Pace de corredores com e sem equipe")
plt.legend()
plt.show()

#@title M√©dia do pace por equipe
mp_equipes = maratona.groupby('equipe')['pace'].mean().reset_index()
print(mp_equipes)

#@title Pace m√©dio por faixa et√°ria para corredores com e sem equipe
mpf_com_equipe = com_equipe.groupby('divisao_faixa')['pace'].mean().reset_index()
mpf_sem_equipe = sem_equipe.groupby('divisao_faixa')['pace'].mean().reset_index()

print(f'M√©dia Pace Faixa\nCom Equipe: {mpf_com_equipe}\nSem Equipe: {mpf_sem_equipe}')

#Contagem de corredores por faixa et√°ria com/sem equipe

nf_com_equipe = com_equipe['divisao_faixa'].value_counts()
nf_sem_equipe = sem_equipe['divisao_faixa'].value_counts()

print(f"Com Equipe: {nf_com_equipe}\nSem Equipe: {nf_sem_equipe}")

#@title Pace m√©dio por faixa et√°ria com/sem equipe

# configura√ß√£o do gr√°fico
fig, ax = plt.subplots(figsize=(10, 5), facecolor='white', dpi=80)

# barras verticais com m√©dia do pace
## sem equipe
ax.vlines(x=mpf_sem_equipe.index, ymin=0, ymax=mpf_sem_equipe['pace'], color='plum', alpha=0.7, linewidth=20, label='Sem Equipe')
## com equipe
ax.vlines(x=mpf_com_equipe.index, ymin=0, ymax=mpf_com_equipe['pace'], color='aquamarine', alpha=0.7, linewidth=20, label='Com Equipe')


# r√≥tulos
plt.xticks(mpf_com_equipe.index, mpf_com_equipe['divisao_faixa'], rotation=60, fontsize=12)
ax.set(ylabel='Pace', ylim=(0, 10))
ax.set(xlabel='Divis√£o Faixa (√≠ndices)')
plt.legend()
plt.title('Pace M√©dio por Faixa Et√°ria e Com/Sem Equipe')

# mostrar gr√°fico
plt.show()

#@title Equipe mais veloz
com_equipe.min()

"""## Conclus√£o ‚ú®

### Desempenho por g√™nero üë©‚Äçü¶±üë®‚Äçü¶∞

>- **Diferen√ßa no Pace:** Em geral, os homens apresentaram um pace menor em compara√ß√£o com as mulheres, indicando que, em m√©dia, os homens nessa maratona foram mais r√°pidos.
- **Participa√ß√£o Masculina Maior:** A maratona teve uma participa√ß√£o maior de homens em compara√ß√£o com as mulheres.

### Desempenho das Equipes üë≠


>- **Equipes tem Pace Menor:** A an√°lise mostra que os corredores que fazem parte de equipes tiveram um pace menor do que aqueles sem equipe. Isso pode estar relacionado com treinamento especializado e que a presen√ßa de uma equipe pode influenciar positivamente o desempenho.
- **Corrida e Longevidade:** Na faixa et√°ria dos 50-54 anos, observa-se uma redu√ß√£o no n√∫mero de corredores. Pode estar relacionado ao risco de les√µes e mudan√ßa de prioridades.
"""

#@title Homens, mulheres, com e sem equipe

# filtrando os dados para homens
homens_com_equipe = maratona[(maratona['equipe'] != 'Team‚Äì') & (maratona['genero'] == 'M')].reset_index()
homens_sem_equipe = maratona[(maratona['equipe'] == 'Team‚Äì') & (maratona['genero'] == 'M')].reset_index()

# filtrando  os dados para mulheres
mulheres_com_equipe = maratona[(maratona['equipe'] != 'Team‚Äì') & (maratona['genero'] == 'W')].reset_index()
mulheres_sem_equipe = maratona[(maratona['equipe'] == 'Team‚Äì') & (maratona['genero'] == 'W')].reset_index()

#@title Gr√°fico com rela√ß√£o de g√™nero e equipe

# pace m√©dio para cada categoria
mp_homens_com_equipe = homens_com_equipe['pace'].mean()
mp_homens_sem_equipe = homens_sem_equipe['pace'].mean()
mp_mulheres_com_equipe = mulheres_com_equipe['pace'].mean()
mp_mulheres_sem_equipe = mulheres_sem_equipe['pace'].mean()

# novo dataframe com resultados
dados_pace = pd.DataFrame({
    'Categoria': ['Homem com Equipe', 'Homem sem Equipe', 'Mulher com Equipe', 'Mulher sem Equipe'],
    'Pace M√©dio': [mp_homens_com_equipe, mp_homens_sem_equipe, mp_mulheres_com_equipe, mp_mulheres_sem_equipe]
})

# configura√ß√£o inicial
plt.figure(figsize=(8, 6))
sns.set(style="whitegrid")

# gr√°fico de barras
sns.barplot(x='Pace M√©dio', y='Categoria', data=dados_pace, palette='pastel')

# r√≥tulos do gr√°fico
plt.title('Pace M√©dio por Categoria')
plt.xlabel('Pace M√©dio')
plt.ylabel('Categoria')

# mostrar o gr√°fico
plt.show()

#@title Valores dos paces por categoria
print(f'M√©dia Pace\nHomens com equipe: {mp_homens_com_equipe}\nHomens sem equipe: {mp_homens_sem_equipe}\nMulheres com equipe: {mp_mulheres_com_equipe}\nMulheres sem equipe: {mp_mulheres_sem_equipe}')